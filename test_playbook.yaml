- name: Comments in the PRs
  hosts: localhost
  vars:
    smb_mount_mode: ro
    smb_server: nv018910017.bmwgroup.net
    mount_folder_name: VIPN_Trace_Storage
    path_to_shared_folder: "//{{ smb_server }}/{{ mount_folder_name }}"
    mount_path_folder: "/tmp/{{ mount_folder_name }}"
    perf_nas_car_drive_credentials_file: "{{ ansible_user_dir }}/.smbcredentials_perf_nas_car_drive"
  tasks:
    # - name: Set fact_1
    #   set_fact:
    #     fact_def: DEFINED 234
    # - name: Set fact_2
    #   set_fact:
    #     fact_check: "{{ fact_def if fact_def is defined and fact_def == 'DEFINED' else ''}}"
    # - name: Set fact_3
    #   set_fact:
    #     fact_res: "{{ fact_def if fact_check is defined and fact_check else 'NOT DEFINED'}}"
    # - name: Set fact_3
    #   set_fact:
    #     fact_condition: >-
    #       {%- if fact_check is defined and fact_check -%}
    #         some_text
    #       {%- else -%}
    #         "{{ fact_def | trim }}"
    #       {%- endif -%}
    #     # tg_tasks: [{"taskId":43352,"name": "ITF_Nightly_Dev_BAT_C1_Release-2410/swh/ddad/e0e48ff6"},{"taskId":43284,"name": "ITF_Nightly_Dev_BAT_C_Master/swh/ddad/0173a2ec"},{"taskId":43319,"name":"ITF_Nightly_Dev_Full_C1_Release-2410/swh/ddad/f01003c0"},{"taskId":43331,"name": "ITF_Nightly_Dev_Full_C_Master/swh/ddad/7079683c"},{"taskId":43275,"name": "ITF_Nightly_Dev_Full_D0_Release-2410/swh/ddad/45609b84"}]
    #     tg_lisyt: [43352,43284,43319,43331,43275]

  # MOUNT SAMBA DRIVE
    # - name: Ensure the mount directory exists
    #   become: true
    #   file:
    #     path: "{{ mount_path_folder }}"
    #     state: directory

    # - name: Check if samba credentials file exists
    #   stat:
    #     path: "{{ perf_nas_car_drive_credentials_file }}"
    #   register: file_status

    # - name: Slurp the credentials
    #   slurp:
    #     src: "{{ perf_nas_car_drive_credentials_file }}"
    #   register: credentials_file

    # - name: Create root copy of Samba credentials file
    #   become: true
    #   copy:
    #     content: |
    #       username = qqipno1
    #       password = IPNext-testandvalidationUser1
    #       domain   = muc
    #     # "{{ credentials_file.content | b64decode | replace(' ', '') }}"
    #     dest: /root/.smbcredentials_perf_nas_car_drive
    #     owner: root
    #     group: root
    #     mode: "0600"

    # - name: Apt-cache update
    #   become: true
    #   command: apt-get update
    #   register: cache_ipdate
    #   ignore_errors: yes

    # - name: Apt-cache search keyutils
    #   command: apt-cache search keyutils
    #   register: keyutils

    # - name: Apt-cache cifs-utils
    #   command: apt-cache search cifs-utils
    #   register: cifsutils

    # - name: Install dependencies for DFS handling
    #   become: true
    #   apt:
    #     name:
    #       - cifs-utils
    #       # - keyutils
    #     state: present

    # - name: Install keyutils for DFS handling
    #   become: true
    #   apt:
    #     name:
    #       - keyutils
    #     state: present
    #     update_cache: true
    #   ignore_errors: yes

    # - name: Display contents
    #   become: true
    #   command: cat resolv.conf chdir=/etc
    #   register: command_output

    # - name: Print to console
    #   debug:
    #     msg: "{{command_output.stdout}}"

    # - name: Mount Samba share {{ path_to_shared_folder }} to {{ mount_path_folder }}
    #   become: true
    #   mount:
    #     state: mounted
    #     fstype: cifs
    #     opts: credentials=/root/.smbcredentials_perf_nas_car_drive,gid=1000,uid=1000,{{ smb_mount_mode }}
    #     src: "{{ path_to_shared_folder }}"
    #     path: "{{ mount_path_folder }}"
    #   register: mount_result
    #   until: mount_result is not failed
    #   retries: 10
    #   delay: 10
    #   ignore_errors: true

    # - name: Get taskId&name of ipnext-tesguide jobs from TestGuide REST API
    #   uri:
    #     url: "https://tg5.tg-prod.bmwgroup.net/api/v2/execution/task/filter?projectId=3&fields=taskId,name&authKey=9L0DC0A=.xd7SlvKeadA9X60V-jZentkot2jILsi78sZezQdbkPY="
    #     method: POST
    #     body:
    #       names:
    #         - "ITF_Nightly_Dev_Full*"
    #         - "ITF_Nightly_Dev_BAT*"
    #       creationDate: {"from": "{{ '%Y-%m-%dT%H:%M:%SZ' | strftime(ansible_date_time.epoch|int - 86400) }}", "to": "{{ ansible_date_time.iso8601 }}"}
    #     body_format: json
    #     return_content: yes
    #     validate_certs: false
    #     # use_netrc: false
    #   register: tg_tasks

    # - name: DBG info
    #   debug:
    #     msg: "{{ fact_condition }}"

    # - debug: msg="{{ tg_tasks.json }}"
    # - debug: msg="{{ item.taskId }}"
    #   with_items: "{{ tg_tasks.json }}"

    # - debug: msg="{{ '%Y-%m-%dT%H:%M:%SZ' | strftime(ansible_date_time.epoch|int - 86400) }}"

    # - name: test
    #   set_fact:
    #     rancher_env_hosts: "{{ rancher_env_hosts | default([]) + [item.taskId] }}"
    #   with_items: "{{ tg_tasks.json }}"

    # - debug: msg="{{ rancher_env_hosts }}"

    # - name: Get timestamp from the system
    #   set_fact:
    #     task_id: "{{ tg_tasks.json | map(attribute='taskId') | list }}"

    # - debug: msg="{{ task_id }}"

    # - name: Check to see if file exists
    #   stat:
    #     path: "/home/dodintsova/work_dir/test_coredumps/{{ item }}"
    #   register: stat_results
    #   with_items: "{{ task_id }}"
    #   ignore_errors: True

    # - set_fact:
    #     result_list: "{{ result_list | default([]) + [item.stat.path] }}"
    #     # result_list: "{{ item.stat.exists }}"
    #   with_items: "{{ stat_results.results }}"
    #   when: "{{ item.stat.exists and item.stat.isdir }}"

    # - debug:
    #     msg: "{{ result_list }}"

    # - name: Ensure the mount directory exists
    #   file:
    #     path: "/tmp/coredumps/{{ '%Y%m%d' | strftime(ansible_date_time.epoch) }}"
    #     state: directory

    # - name: Copy coredumps to tmp dir
    #   copy:
    #     src: "{{ item }}"
    #     dest: "/tmp/coredumps/{{ '%Y%m%d' | strftime(ansible_date_time.epoch) }}"
    #     remote_src: yes
    #   with_items: "{{ result_list }}"

    # - name: Ansible find files in subdirectory examples
    #   find:
    #     paths: "/tmp/coredumps/{{ '%Y%m%d' | strftime(ansible_date_time.epoch) }}"
    #     recurse: yes
    #   register: coredumps_tmp_paths

    # - name: Get timestamp from the system
    #   set_fact:
    #     coredumps: "{{ coredumps_tmp_paths.files | map(attribute='path') | list }}"

    # - debug: msg="{{ coredumps }}"

    - name: Ensure the mount directory exists
      # become: true
      file:
        path: "/tmp/coredumps"
        state: directory

    - name: Unarchive a file that is already on the remote machine
      # become: true
      unarchive:
        src: "/home/dodintsova/Downloads/qnx_sdp_core-20241010-00.tar.gz"
        dest: "/tmp/coredumps"
        include:
          - qnx_sdp_core/target/qnx7/aarch64le
          - qnx_sdp_core/host/linux/x86_64/usr/bin
          - qnx_sdp_core/qnxsdp-env.sh
        remote_src: true
        # mode: '0666'
      ignore_errors: true

    - debug: msg="{{ '%Y%m%d' | strftime(ansible_date_time.epoch) }}"